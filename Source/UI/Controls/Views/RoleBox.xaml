<UserControl x:Class="Sanguosha.UI.Controls.RoleBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Sanguosha.UI.Controls"
             xmlns:res="clr-namespace:Sanguosha.UI.Resources;assembly=Resources"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:t="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
            <local:RoleToHeightConverter x:Key="roleHeightConverter" />
            <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border x:Name="Background">
                                <Grid>
                                    <Rectangle Fill="Transparent" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoleComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                            <Popup x:Name="PART_Popup" Margin="0" 
                                   AllowsTransparency="true"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="0"/>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained">
                                            <StackPanel.Resources>
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}">Transparent</SolidColorBrush>
                                            </StackPanel.Resources>
                                        </StackPanel>
                                </Grid>
                            </Popup>
                            <ToggleButton x:Name="ComboBoxToggleButton" 
                                          Style="{StaticResource ComboBoxReadonlyToggleButton}"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              IsHitTestVisible="false"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="ComboBoxToggleButton" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="true">
                                <Setter TargetName="ComboBoxToggleButton" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ComboBox x:Name="cbRoles" Style="{StaticResource RoleComboBoxStyle}" ItemsSource="{Binding}" DropDownOpened="cbRoles_DropDownOpened" SelectionChanged="cbRoles_SelectionChanged">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <Image Source="{res:ResourceKeyBinding StringFormat=Role.{0}.Facial}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.ItemContainerStyle>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Grid>
                                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Left">
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate>
                                                <Image Source="{res:ResourceKeyBinding StringFormat=Role.{0}.Facial}" Margin="0,2,0,0" Height="{Binding Converter={StaticResource roleHeightConverter}}"/>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
    </Grid>
</UserControl>
