<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	xmlns:res="clr-namespace:Sanguosha.UI.Resources;assembly=Resources"
    mc:Ignorable="d"
    x:Class="Sanguosha.UI.Controls.ChatWidget"
    x:Name="UserControl"
    d:DesignWidth="202" d:DesignHeight="18
    ">
    <UserControl.Resources>
    	<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Common.xaml"/>                
                <ResourceDictionary Source="pack://application:,,,/Resources;component/System.xaml"/>                
            </ResourceDictionary.MergedDictionaries>            
        
        <Style x:Key="ChatWidgetButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="#FF565346" BorderThickness="1" CornerRadius="3" BorderBrush="#FF74715F">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFC9C6B0"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFA49F8A"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="contentPresenter">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="0,1,0,0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <ContentPresenter x:Name="contentPresenter" Margin="-3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		<Style x:Key="FaicalButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>                                            
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border1">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border2">
                                                <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                        	<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border1">
                                                <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border2">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="border1" BorderThickness="1,1,0,0" BorderBrush="Transparent" />
                            <Border x:Name="border2" BorderThickness="0,0,1,1" BorderBrush="Transparent"/>
                            <ContentPresenter x:Name="contentPresenter" Margin="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>                            
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		</ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="19"/>
            <ColumnDefinition Width="19"/>
            <ColumnDefinition Width="19"/>
            <ColumnDefinition Width="18"/>
        </Grid.ColumnDefinitions>
        <Border BorderBrush="#FF4D483A" BorderThickness="1" CornerRadius="2">        	
            <xctk:WatermarkTextBox x:Name="txtMessage"
                                   Background="Transparent"	Margin="0,-4,0,-3" FontFamily="SimSun" FontSize="13" VerticalAlignment="Center"
								   BorderThickness="0" CaretBrush="#FFABA491" Foreground="#FFEDE8D8" MaxLines="1" KeyUp="txtMessage_KeyUp">
            	<xctk:WatermarkTextBox.Watermark>            				
            		<TextBlock Text="请大家不要乱喷" FontFamily="SimSun" FontSize="13" Foreground="#FFABA491" Margin="2,0,0,0" />
				</xctk:WatermarkTextBox.Watermark>
			</xctk:WatermarkTextBox>
        </Border>
        <Button x:Name="btnSend" Grid.Column="1" Margin="1,0,0,0" Style="{DynamicResource ChatWidgetButton}" IsDefault="True" Click="btnSend_Click">
            <Image Height="18" Source="/Resources;component/Images/System/chat-enter.png" Stretch="Fill" Width="18" />
        </Button>
        <Button x:Name="btnFacial" Grid.Column="2" Margin="1,0,0,0" Style="{DynamicResource ChatWidgetButton}" Click="btnFacial_Click">
            <Image Height="18" Source="/Resources;component/Images/System/chat-face.png" Stretch="Fill" Width="18" />
        </Button>
        <Button x:Name="btnTexts" Grid.Column="3" Margin="1,0,0,0" Style="{DynamicResource ChatWidgetButton}">
            <Image Height="18" Source="/Resources;component/Images/System/chat-snippet.png" Stretch="Fill" Width="18"/>
        </Button>
        <Button Grid.Column="4" Margin="0,0,0,0" Style="{DynamicResource ChatWidgetButton}">
            <Image Height="18" Source="/Resources;component/Images/System/chat-emotion.png" Stretch="Fill" Width="18"/>
        </Button>		
		<Popup x:Name="popFacials" PopupAnimation="Fade" Placement="Top" PlacementTarget="{Binding ElementName=btnFacial}">
			<Border CornerRadius="5" Background="#FF201E1B" BorderBrush="#FF74715F" BorderThickness="2">
                <ItemsControl x:Name="gridFacials" ItemsSource="{Binding}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<UniformGrid Columns="5" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Button Style="{DynamicResource FaicalButtonStyle}" Width="24" Height="24" Click="btnSmiley_Click" Margin="1" >
								<Button.ToolTip>
									<ToolTip Placement="Top">
                                    	<TextBlock Foreground="#FFE4D5A0" Text="{res:ResourceKeyBinding StringFormat=Facial.{0}.Hint}" />
									</ToolTip>
								</Button.ToolTip>
								<Image Source="{res:ImageBinding ResourceKeyFormat=Facial.\{0\}.Image}" />
							</Button>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</Popup>
		<Popup PopupAnimation="Fade" Placement="Top" PlacementTarget="{Binding ElementName=btnTexts}">			
		</Popup>
    </Grid>
</UserControl>