<local:PlayerViewBase
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
    xmlns:local="clr-namespace:Sanguosha.UI.Controls"
    xmlns:res="clr-namespace:Sanguosha.UI.Resources;assembly=Resources"
    xmlns:anim="clr-namespace:Sanguosha.UI.Animations;assembly=Animations"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Sanguosha_UI_Effects="clr-namespace:Sanguosha.UI.Effects;assembly=Effects"
    x:Class="Sanguosha.UI.Controls.PlayerView"
    mc:Ignorable="d"
    MaxWidth="180" MaxHeight="210"
    MinWidth="138" MinHeight="174"
    d:DesignHeight="210" d:DesignWidth="180">
    <local:PlayerViewBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MarkView.xaml"/>
                <ResourceDictionary Source="../Buttons/CardButton.xaml"/>
                <ResourceDictionary Source="../Skills/SkillButton.xaml"/>
                <ResourceDictionary Source="../Skills/SkillToolTip.xaml"/>
                <ResourceDictionary Source="../../Common.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources;component/System.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources;component/Images/System.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="SmallTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="TextTrimming" Value="None"/>
                <Setter Property="FontFamily" Value="SimSun" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Color="#FFB7B6B6" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="sbPhaseChange">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgPhase">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="imgPhase">
                    <EasingThicknessKeyFrame KeyTime="0" Value="0,0,75,0"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="sbTremble">
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                    <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.05" Value="-3,0,3,0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <BackEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="10,0,-10,0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <BackEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <BackEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="sbDeathTransition">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(Sanguosha_UI_Effects:MonochromeEffect.Strength)" Storyboard.TargetName="grid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="image">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="3"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="image">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="3"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Style x:Key="SpectateButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image2">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image3">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Image x:Name="image1" Source="/Resources;component/Images/Buttons/spectate/normal.png" Stretch="Fill"/>
                                <Image x:Name="image" Source="/Resources;component/Images/Buttons/spectate/hover.png" Stretch="Fill" Visibility="Hidden"/>
                                <Image x:Name="image2" Source="/Resources;component/Images/Buttons/spectate/down.png" Stretch="Fill" Visibility="Hidden"/>
                                <Image x:Name="image3" Source="/Resources;component/Images/Buttons/spectate/disabled.png" Stretch="Fill" Visibility="Hidden"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="sbStartImpersonate" RepeatBehavior="Forever" AutoReverse="True">
            	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(Sanguosha_UI_Effects:RippleTransitionEffect.Progress)" Storyboard.TargetName="heroPhoto">
            		<EasingDoubleKeyFrame KeyTime="0" Value="100"/>
            		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
            		<EasingDoubleKeyFrame KeyTime="0:0:5" Value="0"/>
            		<EasingDoubleKeyFrame KeyTime="0:0:6" Value="100"/>
            	</DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </local:PlayerViewBase.Resources>
    <Grid x:Name="LayoutRoot">        
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <ItemsControl ItemsSource="{Binding Marks}"                      
                      ItemTemplate="{StaticResource SmallMarkTemplate}" Margin="0,0,0,5"
                      Width="20" Grid.Column="1">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel FlowDirection="LeftToRight"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        <Grid x:Name="LeftGrid" FlowDirection="LeftToRight">
        <Grid.ToolTip>
            <ToolTip x:Name="toolTip" Content="{Binding}" ContentTemplate="{DynamicResource HeroToolTipTemplate}"/>
        </Grid.ToolTip>
        <ToolTipService.ShowOnDisabled>
            <System:Boolean>True</System:Boolean>
        </ToolTipService.ShowOnDisabled>
        <VisualStateManager.CustomVisualStateManager>
            <ei:ExtendedVisualStateManager/>
        </VisualStateManager.CustomVisualStateManager>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="FadedStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Faded">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="fadeMask">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfaded">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="fadeMask">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>        
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="12"/>
        </Grid.RowDefinitions>
        <ProgressBar x:Name="progressBar" Style="{StaticResource TimedProgressBarStyle}" Grid.Column="0" Grid.Row="2" Margin="5,0" />
        <Grid x:Name="grid" Grid.Column="0">            
            <Grid.Effect>
                <Sanguosha_UI_Effects:MonochromeEffect Strength="0"/>
            </Grid.Effect>            
            <Border x:Name="isPlayingGlow" Visibility="{Binding IsCurrentPlayer, Converter={StaticResource boolToVisibilityConverter}}"  Background="#FF27D317">
                <Border.Effect>
                    <BlurEffect Radius="10"/>
                </Border.Effect>
            </Border>
            <Border x:Name="isSelectedGlow" Visibility="{Binding IsSelected, Converter={StaticResource boolToVisibilityConverter}}"  Background="#FFFF6B00">
                <Border.Effect>
                    <BlurEffect Radius="10"/>
                </Border.Effect>
            </Border>
            <Border x:Name="IsResponsingGlow" Visibility="{Binding IsResponsing, Converter={StaticResource boolToVisibilityConverter}}"  Background="Red">
                <Border.Effect>
                    <BlurEffect Radius="10" />
                </Border.Effect>
            </Border>
            <Border Margin="5" CornerRadius="3" BorderBrush="Black" BorderThickness="1">
                <Border.Background>
                    <ImageBrush ImageSource="{DynamicResource PlayerInfoView.Background}" TileMode="Tile"/>
                </Border.Background>
            </Border>
            <Border Margin="6" CornerRadius="3" Opacity="0.2" Background="Transparent">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF707070" Offset="0"/>
                        <GradientStop Color="Black" Offset="1"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <Grid x:Name="mainArea" Margin="7" MouseLeftButtonDown="mainArea_MouseLeftButtonDown" MouseRightButtonDown="mainArea_MouseRightButtonDown">
                <Grid.RowDefinitions>
                    <RowDefinition Height="27"/>
                    <RowDefinition/>
                    <RowDefinition Height="61"/>
                </Grid.RowDefinitions>
                <local:CardStack x:Name="privateCardArea" IsCardConsumer="true" CardAlignment="Center" MaxCardSpacing="20" Grid.RowSpan="3" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-30,0,0,0"  Height="130" Width="179" IsHitTestVisible="false" />
                <local:CardStack x:Name="handCardArea" IsCardConsumer="true" CardAlignment="Center" MaxCardSpacing="20" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Height="130" Width="279" IsHitTestVisible="false" />
                <Rectangle Fill="Black" Grid.RowSpan="2" />
                <Image Source="{DynamicResource PlayerInfoView.Decoration.TopLeft}" Width="64" HorizontalAlignment="Left" Margin="-10,-7,0,0" Grid.RowSpan="2" VerticalAlignment="Top"/>
                <Path Data="M0,0H124" HorizontalAlignment="Center" Margin="0,13,0,0" Stretch="Fill" VerticalAlignment="Top" Width="124">
                    <Path.Stroke>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#FF726E67" Offset="0.3"/>
                            <GradientStop Color="#FF706E66" Offset="0.5"/>
                            <GradientStop Color="#FF726E67" Offset="0.7"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Path.Stroke>
                </Path>
                <Path Data="M0,0H124" HorizontalAlignment="Center" Margin="0,14,0,0" Stretch="Fill" VerticalAlignment="Top" Width="124">
                    <Path.Stroke>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#FF515049" Offset="0.5"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Path.Stroke>
                </Path>
                <Border Margin="2,0,2,4" Grid.Row="1" BorderBrush="#FF79786B" CornerRadius="1" BorderThickness="1" ClipToBounds="True">
                    <Grid>                       
                        <Image x:Name="heroPhoto" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Top" Source="{res:ImageBinding CropRect=28\,46\,220\,132, Path=HeroName, ResourceKeyFormat=Hero.\{0\}.Image, StringFormat=Resources/Images/Heroes/Full/\{0\}.png}">
                        	<Image.Effect>
                        		<Sanguosha_UI_Effects:RippleTransitionEffect Progress="100" Texture2="{res:ImageBinding CropRect=28\,46\,220\,132, Path=ImpersonatedHeroName, ResourceKeyFormat=Hero.\{0\}.Image, StringFormat=Resources/Images/Heroes/Full/\{0\}.png}"/>
                        	</Image.Effect>
                        </Image>
                    	<Rectangle Visibility="{Binding IsDrank, Converter={StaticResource boolToVisibilityConverter}}" >
							<Rectangle.Fill>
								<RadialGradientBrush>
									<GradientStop Color="#00FF0000" Offset="1"/>							
									<GradientStop Color="#4C640000" Offset="0.558"/>
									<GradientStop Color="#4CFF0000"/>
								</RadialGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Image Margin="0" Source="/Resources;component/Images/PlayerInfoView/imprisoned.png" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsImprisoned, Converter={StaticResource boolToVisibilityConverter}}"/>
                        <Border x:Name="IsTargetedGlow" Visibility="{Binding IsTargeted, Converter={StaticResource boolToVisibilityConverter}}" BorderBrush="Red" BorderThickness="5" >
                            <Border.Effect>
                                <BlurEffect Radius="10" />
                            </Border.Effect>
                        </Border>
                        <Image Source="{res:ResourceKeyBinding Path=SelectedTimes, StringFormat=Selection.Digit.{0}}" 
                               VerticalAlignment="Center" HorizontalAlignment="Center"
                               Visibility="{Binding IsSelectionRepeatable, Converter={StaticResource boolToVisibilityConverter}}"
                               IsHitTestVisible="False" />
						<ItemsControl ItemsSource="{Binding Path=PrivateDecks, Mode=OneWay}" Margin="22, 0, 0, 0">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<WrapPanel HorizontalAlignment="Left" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Button Style="{DynamicResource DefaultButtonStyleBrown}" Click="btnPrivateDeck_Click" >
										<TextBlock Foreground="#FFEEE4C1" FontFamily="SimSun" Margin="5, 1" Text="{Binding Path=DisplayText, Mode=OneWay}" />											
									</Button>
								</DataTemplate>	
							</ItemsControl.ItemTemplate>
						</ItemsControl>
                        <local:HealthBar x:Name="healthBar" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                         Height="14" Margin="0,0,3,0" Health="{Binding Health}" MaxHealth="{Binding MaxHealth}"/>
                    	<Grid HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="15,0,0,5">
                    		<Grid.Background>
                    			<ImageBrush ImageSource="{DynamicResource PlayerInfoView.AcquiredSkill.Background}"/>
                    		</Grid.Background>
							<local:OutlinedTextBlock Text="{res:ResourceKeyBinding Path=ImpersonatedSkill, StringFormat=Skill.{0}.Name}" FontSize="21" Fill="White" FontFamily="LiSu" Margin="5,1" Stroke="Blue" StrokeThickness="3"/>
						</Grid>
					</Grid>
                </Border>
                <Image x:Name="allegianceMask" Source="{res:ResourceKeyBinding Path=Allegiance, StringFormat=Allegiance.\{0\}.Mask}" HorizontalAlignment="Left" Grid.RowSpan="2" Width="38" Stretch="Fill" Margin="-3.335,4.333,0,0.667" ClipToBounds="True" Height="119" VerticalAlignment="Top"/>
                <Image x:Name="allegianceIcon" Source="{res:ResourceKeyBinding Path=Allegiance, StringFormat=Allegiance.\{0\}.Icon}" HorizontalAlignment="Left" />
                <local:RoleBox x:Name="cbRoleBox" HorizontalAlignment="Right" Width="25" Height="26"/>
                
                <ItemsControl ItemsSource="{Binding HeroNameChars}" Grid.Row="1"
                              HorizontalAlignment="Left"                              
                              Margin="2,0,0,30"
                              Width="20"
                              VerticalAlignment="Top"
                              MaxHeight="50">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="1"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Viewbox Margin="0, -2, 0, -2" Stretch="Fill" StretchDirection="DownOnly">
                                <local:OutlinedTextBlock TextWrapping="NoWrap"
                                                         Fill="White"
                                                         Stroke="Black"
                                                         StrokeThickness="1"
                                                         FontWeight="Bold"
                                                         Text="{Binding DataContext, RelativeSource={RelativeSource Self}}" 
                                                         FontFamily="LiSu" FontSize="18.667" 
                                                         VerticalAlignment="Center" TextAlignment="Center"
                                                         TextTrimming="None"/>
                            </Viewbox>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.Effect>
                        <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0"/>
                    </ItemsControl.Effect>
                </ItemsControl>

                <TextBlock x:Name="userLevelText" Text="Lv.0" HorizontalAlignment="Center" Margin="0,2,0,0" Style="{DynamicResource SmallTextBlockStyle}"/>
                <TextBlock x:Name="userNameText" HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="UserName" Margin="0,5,0,0" Style="{DynamicResource SmallTextBlockStyle}" Foreground="White" FontSize="13.333"/>
                <Border Grid.Row="1" HorizontalAlignment="Left" Height="17" Width="16" VerticalAlignment="Bottom" Background="#FFF4E5B5" BorderThickness="1" BorderBrush="#FF332D22">
                    <TextBlock x:Name="handCardNum" Margin="0,0,0,0" TextWrapping="Wrap" Text="{Binding HandCardCount}" TextAlignment="Center" FontFamily="Arial" Foreground="Black"/>
                </Border>                
                <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="3" Stretch="Fill" Margin="1,2,0,0" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="3" Stretch="Fill" Margin="1,16,0,0" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="3" Stretch="Fill" Margin="1,30,0,0" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="3" Stretch="Fill" Margin="1,44,0,0" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <Border Grid.Row="2" Margin="15,1,2,0" BorderThickness="1" BorderBrush="Black" Background="#59FFFFFF">
                    <Grid>
                        <Image Source="{DynamicResource PlayerInfoView.Dragon}" HorizontalAlignment="Center" Stretch="Fill" VerticalAlignment="Center" Width="49" Height="45" />
                        <Canvas x:Name="weaponArea" Margin="-15,0,0,0" Height="13" Width="140"  VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Canvas x:Name="armorArea" Margin="-15,14,0,0" Height="13" Width="140"  VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        <Canvas x:Name="horse1Area" Margin="-15,28,0,0" Height="13" Width="140"  VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        <Canvas x:Name="horse2Area" Margin="-15,42,0,0" Height="13" Width="140"  VerticalAlignment="Top" HorizontalAlignment="Left"/>
                    </Grid>
                </Border>
                <Grid Grid.Row="2" Height="22" VerticalAlignment="Top" Margin="-15,-15,-15,0">
                    <Grid.ToolTip>
                        <ToolTip Content="{DynamicResource State.TieSuoLianHuan.Description}" ContentTemplate="{DynamicResource ToolTipTextTemplate}" />
                    </Grid.ToolTip>
                    <Image Source="/Resources;component/Images/Game/IronShackled.png" Stretch="Fill" Visibility="{Binding IsIronShackled, Converter={StaticResource boolToVisibilityConverter}}"/>
                    <anim:TieSuoAnimation2 x:Name="tieSuoAnimation2" FramesPerSecond="15" Stretch="Fill" IsHitTestVisible="False"/>
                </Grid>
                <Grid x:Name="gridSpectate" HorizontalAlignment="Left" Height="24" Margin="16.664,0,0,-0.666" Grid.Row="1" Width="24" VerticalAlignment="Bottom" Visibility="Collapsed">
                    <Button x:Name="btnSpectate" Content="Button" Style="{DynamicResource SpectateButton}" Visibility="Hidden" Click="btnSpectate_Click">
                        <Button.Clip>
                            <RectangleGeometry Rect="0, 5, 25, 15"/>
                        </Button.Clip>
                    </Button>
                </Grid>
            </Grid>
            <Image Source="{DynamicResource PlayerInfoView.Decoration.BottomRight}" Width="64" HorizontalAlignment="Right" Margin="-10,-50,0,0" Grid.RowSpan="2" VerticalAlignment="Bottom" IsHitTestVisible="False" />			
            <Image x:Name="imgPhase" Visibility="{Binding IsCurrentPlayer, Converter={StaticResource boolToVisibilityConverter}}" Source="{res:ResourceKeyBinding Path=CurrentPhase, StringFormat=Phases.\{0\}.Small}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="120" IsHitTestVisible="False" />
            <StackPanel x:Name="delayedToolsDock"  Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="-12,0,15,0" >
                <i:Interaction.Behaviors>
                    <ei:FluidMoveBehavior AppliesTo="Children" Duration="0:0:5">
                        <ei:FluidMoveBehavior.EaseX>
                            <BackEase EasingMode="EaseOut"/>
                        </ei:FluidMoveBehavior.EaseX>
                    </ei:FluidMoveBehavior>
                </i:Interaction.Behaviors>
            </StackPanel>
            <Border x:Name="fadeMask" Background="#64000000" Margin="6" Visibility="Hidden" IsHitTestVisible="False">
                <i:Interaction.Behaviors>
                    <ei:DataStateBehavior Value="true" TrueState="Faded" FalseState="Unfaded" Binding="{Binding IsFaded}"/>
                </i:Interaction.Behaviors>
            </Border>
            <Canvas x:Name="animationCenter2" Margin="0,0,0,20" VerticalAlignment="Bottom" HorizontalAlignment="Center" IsHitTestVisible="False" />
            <Canvas x:Name="animationCenter1" Margin="0,80,0,0" VerticalAlignment="Top" HorizontalAlignment="Center" IsHitTestVisible="False" />
            <anim:TieSuoAnimation x:Name="tieSuoAnimation" FramesPerSecond="15" IsHitTestVisible="False" Height="180" Width="202" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,20"/>            
        </Grid>
        <Image x:Name="image" Source="{res:ImageBinding Path=Role, ResourceKeyFormat=Death.Role.\{0\}.Image, StringFormat=Resources/Images/Death/\{0\}.png}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False" Opacity="0">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
    </Grid>
    </Grid>
</local:PlayerViewBase>