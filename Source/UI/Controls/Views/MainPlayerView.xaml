<local:PlayerViewBase
 	         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	         xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
             xmlns:local="clr-namespace:Sanguosha.UI.Controls"
             xmlns:res="clr-namespace:Sanguosha.UI.Resources;assembly=Resources"
	         xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             x:Class="Sanguosha.UI.Controls.MainPlayerView"
	         mc:Ignorable="d"
             Height="200"
             d:DesignWidth="900">
    <local:PlayerViewBase.Resources>        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="EquipButton.xaml"/>
                <ResourceDictionary Source="SkillButton.xaml"/>
                <ResourceDictionary Source="SkillToolTip.xaml"/>
            	<ResourceDictionary Source="../Common.xaml"/>
            	<ResourceDictionary Source="pack://application:,,,/Resources;component/System.xaml"/>
            	<ResourceDictionary Source="pack://application:,,,/Resources;component/Images/System.xaml"/>                
            </ResourceDictionary.MergedDictionaries>
        	<Storyboard x:Key="sbPhaseChange">
        		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgPhase">
        			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        			<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
        				<EasingDoubleKeyFrame.EasingFunction>
        					<CubicEase EasingMode="EaseOut"/>
        				</EasingDoubleKeyFrame.EasingFunction>
        			</EasingDoubleKeyFrame>
        		</DoubleAnimationUsingKeyFrames>
        		<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="imgPhase">
        			<EasingThicknessKeyFrame KeyTime="0" Value="-25,0,0,0"/>
        			<EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="50,0,0,0">
        				<EasingThicknessKeyFrame.EasingFunction>
        					<CubicEase EasingMode="EaseOut"/>
        				</EasingThicknessKeyFrame.EasingFunction>
        			</EasingThicknessKeyFrame>
        		</ThicknessAnimationUsingKeyFrames>
        	</Storyboard>
        	<Style x:Key="OkButtonStyle" TargetType="{x:Type Button}">
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Grid>
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualState x:Name="Normal">
        									<Storyboard/>
        								</VisualState>
        								<VisualState x:Name="MouseOver">
        									<Storyboard>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="up">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
        										</ObjectAnimationUsingKeyFrames>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        										</ObjectAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Pressed">
        									<Storyboard>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="down">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        										</ObjectAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Disabled">
        									<Storyboard>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disabled">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        										</ObjectAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<Rectangle x:Name="up" RenderTransformOrigin="0.5,0.5">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Ok.Up}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        						<Rectangle x:Name="down" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Ok.Down}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        						<Rectangle x:Name="hover" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Ok.Hover}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        						<Rectangle x:Name="disabled" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Ok.Disabled}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsFocused" Value="True"/>
        						<Trigger Property="IsDefaulted" Value="True"/>
        						<Trigger Property="IsMouseOver" Value="True"/>
        						<Trigger Property="IsPressed" Value="True"/>
        						<Trigger Property="IsEnabled" Value="False"/>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="CancelButtonStyle" TargetType="{x:Type Button}">
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Grid>
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualState x:Name="Normal">
        									<Storyboard/>
        								</VisualState>
        								<VisualState x:Name="MouseOver">
        									<Storyboard>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="up">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
        										</ObjectAnimationUsingKeyFrames>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        										</ObjectAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Pressed">
        									<Storyboard>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="down">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        										</ObjectAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Disabled">
        									<Storyboard>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disabled">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        										</ObjectAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<Rectangle x:Name="up" RenderTransformOrigin="0.5,0.5">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Cancel.Up}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        						<Rectangle x:Name="down" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Cancel.Down}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        						<Rectangle x:Name="hover" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Cancel.Hover}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        						<Rectangle x:Name="disabled" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Cancel.Disabled}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsFocused" Value="True"/>
        						<Trigger Property="IsDefaulted" Value="True"/>
        						<Trigger Property="IsMouseOver" Value="True"/>
        						<Trigger Property="IsPressed" Value="True"/>
        						<Trigger Property="IsEnabled" Value="False"/>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="DiscardButtonStyle" TargetType="{x:Type Button}">
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Grid>
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualState x:Name="Normal" />
        								<VisualState x:Name="MouseOver" />
        								<VisualState x:Name="Pressed" />
        								<VisualState x:Name="Disabled" />
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<Rectangle x:Name="up" RenderTransformOrigin="0.5,0.5">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Discard.Up}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        						<Rectangle x:Name="down" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Discard.Down}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        						<Rectangle x:Name="hover" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Discard.Hover}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        						<Rectangle x:Name="disabled" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
        							<Rectangle.Fill>
        								<ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Discard.Disabled}"/>
        							</Rectangle.Fill>
        						</Rectangle>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsFocused" Value="True"/>
        						<Trigger Property="IsDefaulted" Value="True"/>
        						<Trigger Property="IsMouseOver" Value="True">
        							<Setter TargetName="hover" Property="Visibility" Value="Visible" />
        							<Setter TargetName="up" Property="Visibility" Value="Hidden" />
        						</Trigger>
        						<Trigger Property="IsPressed" Value="True">
        							<Setter TargetName="down" Property="Visibility" Value="Visible" />
        							<Setter TargetName="up" Property="Visibility" Value="Hidden" />
								</Trigger>
        						<Trigger Property="IsEnabled" Value="False">
        							<Setter TargetName="disabled" Property="Visibility" Value="Visible" />
        							<Setter TargetName="up" Property="Visibility" Value="Hidden" />
								</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Storyboard x:Key="Countdown"/>
        </ResourceDictionary>
    </local:PlayerViewBase.Resources>
	<local:PlayerViewBase.Triggers>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded">
			<BeginStoryboard Storyboard="{StaticResource Countdown}"/>
		</EventTrigger>
	</local:PlayerViewBase.Triggers>
    <Grid>
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="FadeStates">
    			<VisualState x:Name="Faded">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fadeMask">
    						<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="UnFaded">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fadeMask">
    						<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
    	<Grid.RowDefinitions>
    		<RowDefinition Height="30"/>  	
    		<RowDefinition Height="170" />
		</Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
        	<ColumnDefinition Width="auto" />
        	<ColumnDefinition Width="1*" />
        	<ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
    	<VisualStateManager.CustomVisualStateManager>
    		<ei:ExtendedVisualStateManager/>
    	</VisualStateManager.CustomVisualStateManager>
		<Image Grid.ColumnSpan="3" x:Name="imgPhase" 
		       Visibility="{Binding IsCurrentPlayer, Converter={StaticResource boolToVisibilityConverter}}"
			   Source="{res:ResourceKeyBinding Path=CurrentPhase, StringFormat=Phases.\{0\}.Large}"
			   HorizontalAlignment="Left" VerticalAlignment="Bottom"
			   Margin="50,0,0,0"
			   Width="149" Height="15"/>
        <Grid Grid.Row="1" Width="164">
            <Grid.Background>
                <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Background.Left}"/>
            </Grid.Background>
            <StackPanel Height="29" Orientation="Horizontal" HorizontalAlignment="Left" Margin="8,0,0,0" Name="delayedToolsDock" VerticalAlignment="Top" >
            	<i:Interaction.Behaviors>
            		<ei:FluidMoveBehavior AppliesTo="Children" Duration="0:0:5">
            			<ei:FluidMoveBehavior.EaseX>
            				<BackEase EasingMode="EaseOut"/>
            			</ei:FluidMoveBehavior.EaseX>
            		</ei:FluidMoveBehavior>
            	</i:Interaction.Behaviors>
            </StackPanel>
            <Grid x:Name="weaponArea" Margin="0,39,0,0" Height="37" Width="161"  VerticalAlignment="Top" />
            <Grid x:Name="armorArea" Margin="0,70,0,0" Height="37" Width="161"  VerticalAlignment="Top" />
            <Grid x:Name="horse1Area" Margin="0,101,0,0" Height="37" Width="161"  VerticalAlignment="Top" />           
            <Grid x:Name="horse2Area" Margin="0,132,0,0" Height="37" Width="161"  VerticalAlignment="Top" />
        </Grid>
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.Background>
                <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Background.Middle}" Viewport="0,0,0.1,1" TileMode="FlipX" Stretch="None" />
            </Grid.Background>
            <Grid Grid.Row="1" Grid.Column="1">
                <Grid.ColumnDefinitions>
                	<ColumnDefinition Width="1*"/>
                	<ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <local:CardStack x:Name="handCardPlaceHolder" VerticalAlignment="Bottom" Margin="5,0,10,0" Height="130" MaxCardSpacing="97" CardAlignment="Left" />
                <Image Grid.Column="1" Source="{DynamicResource MainPlayerInfoView.Background.Platter}"/>                
                <local:RoleBox x:Name="cbRoleBox" Grid.Column="1" HorizontalAlignment="Right" Width="25" Margin="0,5,6,0" Height="26" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                    <local:RoleBox.RenderTransform>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                    </local:RoleBox.RenderTransform>
                </local:RoleBox>
                <Button x:Name="btnOk" Command="{Binding SubmitAnswerCommand}" Grid.Column="1" Height="82" Margin="3,-1,39,0" Style="{DynamicResource OkButtonStyle}" VerticalAlignment="Top" />
            </Grid>
            <Border HorizontalAlignment="Right" Height="17" Width="16" VerticalAlignment="Top" Background="#FFF4E5B5" BorderThickness="1" BorderBrush="#FF332D22" Margin="0,148,92,0" d:LayoutOverrides="GridBox">
                <TextBlock Margin="0,0,0,0" TextWrapping="Wrap" Text="{Binding HandCardCount}" TextAlignment="Center" FontFamily="Arial" Foreground="Black"/>
            </Border>
            <Button Content="" Height="82" Margin="0,0,39,0" Command="{Binding CancelAnswerCommand}" Style="{DynamicResource CancelButtonStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="67"/>
            <Button Content="" Margin="0,44,5,44" Command="{Binding AbortAnswerCommand}" Style="{DynamicResource DiscardButtonStyle}" HorizontalAlignment="Right" Width="33"/>
        </Grid>		
		<Grid Grid.Row="1" Grid.Column="2" Background="Black">
			<Border Margin="9,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="134" Height="134" IsEnabled="{Binding IsEnabled}" MouseLeftButtonDown="Border_MouseLeftButtonDown">
                <Image x:Name="heroPhoto" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Top">
                    <Image.Source>
                        <res:ImageBinding Path="HeroName" StringFormat="Resources/Images/Heroes/{0}.png" ResourceKeyFormat="Hero.{0}.Image" CropRect="71,28,145,145" />                        
                    </Image.Source>
                    <Image.ToolTip>
                        <ToolTip x:Name="toolTip" Content="{Binding}" Placement="Top" ContentTemplate="{DynamicResource HeroToolTipTemplate}"/>
                    </Image.ToolTip>
                    <ToolTipService.ShowOnDisabled>True</ToolTipService.ShowOnDisabled>                    
                </Image>                
			</Border>
            <Border x:Name="fadeMask" Background="#64000000" Opacity="0" IsHitTestVisible="False">
            	<i:Interaction.Behaviors>
            		<ei:DataStateBehavior TrueState="Faded" FalseState="UnFaded" Value="true" Binding="{Binding IsFaded}"/>
            	</i:Interaction.Behaviors>
            </Border>
        	<Image Source="{DynamicResource MainPlayerInfoView.Background.Right}" IsHitTestVisible="False" />
            <local:VHealthBar x:Name="healthBar" HorizontalAlignment="Right" VerticalAlignment="Top"
                              Height="140" Width="25" Margin="0,11,0,0" Health="{Binding Health}" MaxHealth="{Binding MaxHealth}" IsHitTestVisible="False" />            
            <TextBlock Height="17" Margin="8,12,31.5,0" TextWrapping="Wrap" VerticalAlignment="Top" FontFamily="SimSun" Foreground="White" FontSize="13.333" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="16" Background="#7F585858" IsHitTestVisible="False"><Run Language="zh-cn" Text="UserName"/></TextBlock>
            <Image x:Name="allegianceIcon" Source="{res:ResourceKeyBinding Path=Allegiance, StringFormat=Allegiance.\{0\}.Icon}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="28" Height="29" Margin="8,10,0,0" IsHitTestVisible="False" />

            <ItemsControl ItemsSource="{Binding HeroNameChars}" Grid.Row="1"
                          HorizontalAlignment="Left"
                          Margin="11,34,0,85"
                          Width="20" IsHitTestVisible="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Viewbox Margin="0, -2, 0, -2" Stretch="Fill" StretchDirection="DownOnly">
                            <local:OutlinedTextBlock TextWrapping="NoWrap"
                                                         Fill="White"
                                                         Stroke="Black"
                                                         StrokeThickness="1"
                                                         FontWeight="Bold"
                                                         Text="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" 
                                                         FontFamily="LiSu" FontSize="18.667" 
                                                         VerticalAlignment="Center" TextAlignment="Center"
                                                         TextTrimming="None">
                            </local:OutlinedTextBlock>
                        </Viewbox>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.Effect>
                    <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0"/>
                </ItemsControl.Effect>
            </ItemsControl>
            
            <ItemsControl x:Name="skillButtonDock" HorizontalAlignment="Left" Margin="6,0,0,4" VerticalAlignment="Bottom" Width="134" ItemsSource="{Binding SkillCommands}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <local:SkillButtonDock />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ToggleButton Style="{StaticResource SkillButtonStyle}" IsEnabled="{Binding IsEnabled}" IsChecked="{Binding IsSelected}">
                            <Grid>
                                <local:OutlinedTextBlock TextWrapping="NoWrap" Fill="Black" Stroke="Black" StrokeThickness="3" FontWeight="Bold" Text="{res:ResourceKeyBinding Path=SkillName, StringFormat=Skill.\{0\}.Name}" FontFamily="KaiTi" FontSize="14" VerticalAlignment="Center" TextAlignment="Justify">
                                    <local:OutlinedTextBlock.Effect>
                                        <BlurEffect />
                                    </local:OutlinedTextBlock.Effect>
                                </local:OutlinedTextBlock>
                                <local:OutlinedTextBlock TextWrapping="NoWrap" Fill="White" Stroke="White" StrokeThickness="1" FontWeight="Bold" Text="{res:ResourceKeyBinding Path=SkillName, StringFormat=Skill.\{0\}.Name}" FontFamily="KaiTi" FontSize="14" VerticalAlignment="Center" TextAlignment="Justify">
                            </local:OutlinedTextBlock>                            
                            </Grid>
                            <ToggleButton.ToolTip>
                                <ToolTip ContentTemplate="{StaticResource SkillToolTipTemplate}" Content="{Binding Mode=OneWay}" />  
                            </ToggleButton.ToolTip>
                            <ToolTipService.ShowOnDisabled>True</ToolTipService.ShowOnDisabled>
                        </ToggleButton>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Canvas x:Name="animationCenter1" HorizontalAlignment="Left" Height="16" Margin="63,69,0,0" VerticalAlignment="Top" Width="18" IsHitTestVisible="False"/>
        </Grid>
		<Canvas x:Name="animationCenter2" HorizontalAlignment="Center" Margin="0" Grid.ColumnSpan="2" VerticalAlignment="Top"/>		
    </Grid>
</local:PlayerViewBase>
