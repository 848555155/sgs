<local:PlayerInfoViewBase
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
    xmlns:local="clr-namespace:Sanguosha.UI.Controls"
    xmlns:res="clr-namespace:Sanguosha.UI.Resources;assembly=Resources"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    x:Class="Sanguosha.UI.Controls.PlayerInfoView"
    mc:Ignorable="d"
    MaxWidth="168" MaxHeight="210" MinWidth="138" MinHeight="174" d:DesignHeight="210" d:DesignWidth="168">
    <local:PlayerInfoViewBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="EquipButton.xaml"/>
                <ResourceDictionary Source="SkillButton.xaml"/>
                <ResourceDictionary Source="SkillToolTip.xaml"/>
                <ResourceDictionary Source="../Common.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources;component/System.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources;component/Images/System.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="SmallTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="TextTrimming" Value="None"/>
                <Setter Property="FontFamily" Value="SimSun" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Color="#FFB7B6B6" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="sbPhaseChange">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgPhase">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="imgPhase">
                    <EasingThicknessKeyFrame KeyTime="0" Value="0,0,75,0"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </local:PlayerInfoViewBase.Resources>
    <local:PlayerInfoViewBase.Triggers>
    	<EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="imgPhase">
    		<BeginStoryboard Storyboard="{StaticResource sbPhaseChange}"/>
    	</EventTrigger>
    </local:PlayerInfoViewBase.Triggers>
    <Grid x:Name="LayoutRoot">
        <Grid.ToolTip>
            <ToolTip x:Name="toolTip" Content="{Binding}" ContentTemplate="{DynamicResource HeroToolTipTemplate}"/>
        </Grid.ToolTip>
        <ToolTipService.ShowOnDisabled>True</ToolTipService.ShowOnDisabled>
        <VisualStateManager.CustomVisualStateManager>
    		<ei:ExtendedVisualStateManager/>
    	</VisualStateManager.CustomVisualStateManager>
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="FadedStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:0.2"/>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="Faded">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="fadeMask">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="Unfaded">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="fadeMask">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>        
        <Grid.RowDefinitions>
        	<RowDefinition/>
        	<RowDefinition Height="12"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
        	<ColumnDefinition/>
        	<ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <ProgressBar Style="{StaticResource TimedProgressBarStyle}" Grid.Column="0" Grid.Row="2" Margin="5,0" Value="80" />
        <Grid Grid.Column="0">            
            <Border x:Name="isPlayingGlow" Visibility="{Binding IsCurrentPlayer, Converter={StaticResource boolToVisibilityConverter}}"  Background="#FF27D317">
                <Border.Effect>
                    <BlurEffect Radius="10"/>
                </Border.Effect>
            </Border>
            <Border x:Name="isSelectedGlow" Visibility="{Binding IsSelected, Converter={StaticResource boolToVisibilityConverter}}"  Background="#FFFF6B00">
                <Border.Effect>
                    <BlurEffect Radius="10"/>
                </Border.Effect>
            </Border>
            <Border Margin="5" CornerRadius="3" BorderBrush="Black" BorderThickness="1">
                <Border.Background>
                    <ImageBrush ImageSource="{DynamicResource PlayerInfoView.Background}" TileMode="Tile"/>
                </Border.Background>
            </Border>
            <Border Margin="6" CornerRadius="3" Opacity="0.2" Background="Transparent">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF707070" Offset="0"/>
                        <GradientStop Color="Black" Offset="1"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <Grid Margin="7" MouseLeftButtonDown="mainArea_MouseLeftButtonDown">
                <Grid.RowDefinitions>
                    <RowDefinition Height="27"/>
                    <RowDefinition/>
                    <RowDefinition Height="61"/>
                </Grid.RowDefinitions>
                <local:CardStack x:Name="handCardPlaceHolder" IsCardConsumer="true" CardAlignment="Center" MaxCardSpacing="20" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Height="130" Width="279" />
                <Rectangle Fill="Black" Grid.RowSpan="2" />
                <Image Source="{DynamicResource PlayerInfoView.Decoration.TopLeft}" Width="64" HorizontalAlignment="Left" Margin="-10,-7,0,0" Grid.RowSpan="2" VerticalAlignment="Top"/>
                <Path Data="M0,0H124" HorizontalAlignment="Center" Margin="0,13,0,0" Stretch="Fill" VerticalAlignment="Top" Width="124">
                    <Path.Stroke>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#FF726E67" Offset="0.3"/>
                            <GradientStop Color="#FF706E66" Offset="0.5"/>
                            <GradientStop Color="#FF726E67" Offset="0.7"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Path.Stroke>
                </Path>
                <Path Data="M0,0H124" HorizontalAlignment="Center" Margin="0,14,0,0" Stretch="Fill" VerticalAlignment="Top" Width="124">
                    <Path.Stroke>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#FF515049" Offset="0.5"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Path.Stroke>
                </Path>
                <Border Margin="2,0,2,4" Grid.Row="1" BorderBrush="#FF79786B" CornerRadius="1" BorderThickness="1" ClipToBounds="True">
                    <Grid>
                        <Image x:Name="heroPhoto" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Image.Source>
                                <res:ImageBinding Path="HeroName" StringFormat="Resources/Images/Heroes/{0}.png" ResourceKeyFormat="Hero.{0}.Image" CropRect="28,46,220,132" />
                            </Image.Source>
                        </Image>                               
                        <Border x:Name="IsTargetedGlow" Visibility="{Binding IsTargeted, Converter={StaticResource boolToVisibilityConverter}}" BorderBrush="Red" BorderThickness="5" >
                            <Border.Effect>
                                <BlurEffect Radius="10" />
                            </Border.Effect>
                        </Border>                        
                        <local:HealthBar x:Name="healthBar" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                         Height="14" Margin="0,0,3,0" Health="{Binding Health}" MaxHealth="{Binding MaxHealth}"/>
                    </Grid>
                </Border>
                <Image x:Name="allegianceMask" Source="{res:ResourceKeyBinding Path=Allegiance, StringFormat=Allegiance.\{0\}.Mask}" HorizontalAlignment="Left" Grid.RowSpan="2" Width="38" Stretch="Fill" Margin="-3.335,4.333,0,0.667" ClipToBounds="True" Height="119" VerticalAlignment="Top"/>
                <Image x:Name="allegianceIcon" Source="{res:ResourceKeyBinding Path=Allegiance, StringFormat=Allegiance.\{0\}.Icon}" HorizontalAlignment="Left" />
                <local:RoleBox x:Name="cbRoleBox" HorizontalAlignment="Right"/>
                <Border Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2,3,0,0" Width="20">
                    <local:OutlinedTextBlock x:Name="HeroNameText" TextWrapping="Wrap" Fill="White" Stroke="Black" StrokeThickness="1" FontWeight="Bold" Text="{res:ResourceKeyBinding Path=HeroName, StringFormat=Hero.\{0\}.Name}" FontFamily="LiSu" FontSize="18.667" VerticalAlignment="Center" TextAlignment="Center">
                    <local:OutlinedTextBlock.Effect>
                        <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0"/>
                    </local:OutlinedTextBlock.Effect>
                    </local:OutlinedTextBlock>
                </Border>
                <TextBlock x:Name="userLevelText" Text="Lv.0" HorizontalAlignment="Center" Margin="0,2,0,0" Style="{DynamicResource SmallTextBlockStyle}"/>
                <TextBlock x:Name="userNameText" HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="UserName" Margin="0,5,0,0" Style="{DynamicResource SmallTextBlockStyle}" Foreground="White" FontSize="13.333"/>
                <Border Grid.Row="1" HorizontalAlignment="Left" Height="17" Width="16" VerticalAlignment="Bottom" Background="#FFF4E5B5" BorderThickness="1" BorderBrush="#FF332D22">
                    <TextBlock Margin="0,0,0,0" TextWrapping="Wrap" Text="0" TextAlignment="Center" FontFamily="Arial" Foreground="Black"/>
                </Border>                
                <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="3" Stretch="Fill" Margin="1,2,0,0" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="3" Stretch="Fill" Margin="1,16,0,0" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="3" Stretch="Fill" Margin="1,30,0,0" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="3" Stretch="Fill" Margin="1,44,0,0" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <Border Grid.Row="2" Margin="15,1,2,0" BorderThickness="1" BorderBrush="Black" Background="#59FFFFFF">
                    <Grid>
                        <Image Source="{DynamicResource PlayerInfoView.Dragon}" HorizontalAlignment="Center" Stretch="Fill" VerticalAlignment="Center" Width="49" Height="45" />
                        <Canvas x:Name="weaponArea" Margin="-15,0,0,0" Height="13" Width="140"  VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Canvas x:Name="armorArea" Margin="-15,14,0,0" Height="13" Width="140"  VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        <Canvas x:Name="horse1Area" Margin="-15,28,0,0" Height="13" Width="140"  VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        <Canvas x:Name="horse2Area" Margin="-15,42,0,0" Height="13" Width="140"  VerticalAlignment="Top" HorizontalAlignment="Left"/>
                    </Grid>
                </Border>
            </Grid>
            <Image Source="{DynamicResource PlayerInfoView.Decoration.BottomRight}" Width="64" HorizontalAlignment="Right" Margin="-10,-50,0,0" Grid.RowSpan="2" VerticalAlignment="Bottom" IsHitTestVisible="False" />
            <Image x:Name="imgPhase" Visibility="{Binding IsCurrentPlayer, Converter={StaticResource boolToVisibilityConverter}}" Source="{res:ResourceKeyBinding Path=CurrentPhase, StringFormat=Phases.\{0\}.Small}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="120" IsHitTestVisible="False" />
            <StackPanel x:Name="delayedToolsDock"  Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="-12,0,15,0" />
            <Border x:Name="fadeMask" Background="#64000000" Margin="6" Visibility="Hidden" IsHitTestVisible="False">
            	<i:Interaction.Behaviors>
            		<ei:DataStateBehavior Value="true" TrueState="Faded" FalseState="Unfaded" Binding="{Binding IsFaded}"/>
            	</i:Interaction.Behaviors>
            </Border>
        </Grid>
    </Grid>
</local:PlayerInfoViewBase>